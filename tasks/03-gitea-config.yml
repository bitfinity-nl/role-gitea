---
# Title: role-gitea
#
# Author: bitfinity.nl
# File: tasks/03-gitea-config.yml.yml
#
# Description:
#   Gitea is a community managed lightweight code hosting solution written in Go.
#

- name: "Check if /etc/gitea/app.ini exists"
  stat:
    path: /etc/gitea/app.ini
  register: result_app_ini

- name: "Generate (Global) SECRET_KEY for Gitea"
  shell: gitea generate secret SECRET_KEY
  register: result_global_secretkey

- name: "Generate INTERNAL_TOKEN for Gitea"
  shell: gitea generate secret INTERNAL_TOKEN
  register: result_internal_token
 
- name: "Transfer template gitea/app.ini.j2 to /etc/gitea/app.ini"
  ansible.builtin.template:
    src: gitea/app.ini.j2
    dest: /etc/gitea/app.ini
    owner: root
    group: root
    mode: '0600'  
    backup: yes
  when: result_app_ini.stat.exists == false

- name: "Configure global SECRET_KEY for Gitea"
  ansible.builtin.lineinfile:
    path: /etc/gitea/app.ini
    regexp: '^SECRET_KEY.*='
    line: "SECRET_KEY     = {{ result_global_secretkey.stdout }}" 
  when: result_app_ini.stat.exists == false
    
- name: "Configure INTERNAL_TOKEN for Gitea" 
  ansible.builtin.lineinfile:
    path: /etc/gitea/app.ini
    regexp: '^INTERNAL_TOKEN.*='
    line: "INTERNAL_TOKEN = {{ result_internal_token.stdout }}"
  when: result_app_ini.stat.exists == false
    
- name: "Configure /etc/gitea/app.ini for database"
  blockinfile:
    path: /etc/gitea/app.ini
    marker: "#<!-- {mark} ANSIBLE MANAGED BLOCK - Database-->"
    # insertafter: "<body>"
    block: |
       [database]
       DB_TYPE  = {{ gitea_db_type }}
       HOST     = {{ gitea_host }}
       NAME     = {{ gitea_name }} 
       USER     = {{ gitea_user }}
       PASSWD   = {{ gitea_passwd }}
       SSL_MODE = {{ gitea_ssl_mode }}
       CHARSET  = {{ gitea_charset }}
       PATH     = {{ gitea_path }}
