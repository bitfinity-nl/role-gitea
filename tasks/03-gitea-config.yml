---
# Title: role-gitea
#
# Author: bitfinity.nl
# File: tasks/03-gitea-config.yml.yml
#
# Description:
#   Gitea is a community managed lightweight code hosting solution written in Go.
#

- name: "Check if /opt/gitea/generated/secret-key global SECRET_KEY for Gitea exists"
  stat:
    path: /opt/gitea/generated/secret-key
  register: result_secret_key
  
- name: "Check if  /opt/gitea/generated/internal-token INTERNAL_TOKEN exists"
  stat:
    path: /opt/gitea/generated/internal-token
  register: result_internal_token

- name: "Check if /opt/gitea/generated/jwt_secret JWT_SECRET exists"
  stat:
    path: /opt/gitea/generated/jwt_secret
  register: result_jwt_secret
 
- name: "Check if /opt/gitea/generated/lfs_jwt_secret LFS_JWT_SECRET exists"
  stat:
    path: /opt/gitea/generated/lfs_jwt_secret
  register: result_lfs_jwt_secret

- name: "Check if /etc/gitea/app.ini exists"
  stat:
    path: /etc/gitea/app.ini
  register: result_app_ini

- name: "Create directory /etc/gitea/generated exists"
  file:
    path: /opt/gitea/generated/
    state: directory

- name: "Create repository directory {{ gitea_root }} exists"
  file:
    path: "{{ gitea_root }}"
    owner: git
    group: git
    mode: 0755
    state: directory
    
- name: "Generate (Global) SECRET_KEY for Gitea"
  shell: "gitea generate secret SECRET_KEY > /opt/gitea/generated/secret-key"
  when: result_secret_key.stat.exists == false

- name: "Generate INTERNAL_TOKEN for Gitea"
  shell: "gitea generate secret INTERNAL_TOKEN > /opt/gitea/generated/internal-token"
  when: result_internal_token.stat.exists == false

- name: "Generate JWT_SECRET for Gitea"
  shell: "gitea generate secret JWT_SECRET > /opt/gitea/generated/jwt_secret"
  when: result_jwt_secret.stat.exists == false

- name: "Generate LFS_JWT_SECRET for Gitea"
  shell: "gitea generate secret LFS_JWT_SECRET > /opt/gitea/generated/lfs_jwt_secret"
  when: result_lfs_jwt_secret.stat.exists == false

- name: "Transfer template gitea/app.ini.j2 to /etc/gitea/app.ini"
  ansible.builtin.template:
    src: gitea/app.ini.j2
    dest: /etc/gitea/app.ini
    owner: root
    group: git
    mode: '0640'
    backup: yes
  #  force: yes
  #when: result_app_ini.stat.exists == false
  notify: restart_gitea

- name: "Register generated SECRET_KEY to variable registerd_secret_key"
  shell: "cat secret-key"
  args:
    chdir: /opt/gitea/generated/  
  register: found_global_secretkey
  when: result_secret_key.stat.exists == true

- name: "Register generated INTERNAL_TOKEN to variable registerd_internal_token"
  shell: "cat internal-token"
  args:
    chdir: /opt/gitea/generated/
  register: found_internal_token
  when: result_internal_token.stat.exists == true

- name: "Register generated JWT_SECRET to variable registerd_jwt_secret"
  shell: "cat jwt_secret"
  args:
    chdir: /opt/gitea/generated/
  register: found_jwt_secret
  when: result_jwt_secret.stat.exists == true

- name: "Register generated LFS_JWT_SECRET to variable registerd_lfs_jwt_secret"
  shell: "cat lfs_jwt_secret"
  args:
    chdir: /opt/gitea/generated/
  register: found_lfs_jwt_secret
  when: result_lfs_jwt_secret.stat.exists == true

- name: "Configure global SECRET_KEY for Gitea"
  ansible.builtin.lineinfile:
    path: /etc/gitea/app.ini
    regexp: '^SECRET_KEY.*='
    line: "SECRET_KEY     = {{ found_global_secretkey.stdout }}"
  when: result_secret_key.stat.exists == true  
    
- name: "Configure INTERNAL_TOKEN for Gitea" 
  ansible.builtin.lineinfile:
    path: /etc/gitea/app.ini
    regexp: '^INTERNAL_TOKEN.*='
    line: "INTERNAL_TOKEN = {{ found_internal_token.stdout }}"
  when: result_internal_token.stat.exists == true

- name: "Configure JWT_SECRET for Gitea" 
  ansible.builtin.lineinfile:
    path: /etc/gitea/app.ini
    regexp: '^JWT_SECRET.*='
    line: "JWT_SECRET = {{ found_jwt_secret.stdout }}"
  when: result_jwt_secret.stat.exists == true

- name: "Configure LFS_JWT_SECRET for Gitea" 
  ansible.builtin.lineinfile:
    path: /etc/gitea/app.ini
    regexp: '^LFS_JWT_SECRET.*='
    line: "LFS_JWT_SECRET   = {{ found_lfs_jwt_secret.stdout }}"
  when: result_lfs_jwt_secret.stat.exists == true

- name: "Create administrative Gitea account"
  raw: 'sudo su - git -c "gitea admin user create --username {{ gitea_admin_user }} --password {{ gitea_admin_pass }} --email {{ gitea_admin_mail }} --admin -c /etc/gitea/app.ini"'
  when: result_app_ini.stat.exists == false

- name: "Enable and start gitea service"
  systemd:
    name: gitea
    state: started
    enabled: yes
